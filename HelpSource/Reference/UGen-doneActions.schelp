title:: UGen done-actions
summary:: Actions to take when an UGen has finished
categories:: UGens, Server>Nodes
related:: Classes/UGen, Classes/Done, Classes/FreeSelfWhenDone
keyword:: doneAction
keyword:: done action
keyword:: done actions
keyword:: doneactions


A number of UGens implement doneActions. These allow one to optionally free or pause the enclosing synth and other related nodes when the UGen is finished.

list::
## link::Classes/PlayBuf::
## link::Classes/RecordBuf::
## link::Classes/EnvGen::
## link::Classes/Line::
## link::Classes/XLine::
## link::Classes/Linen::
## link::Classes/LFGauss::
## link::Classes/DemandEnvGen::
## link::Classes/DetectSilence::
## link::Classes/Duty::
## link::Classes/TDuty::
::

section:: Actions
On the server, done actions are identified by numeric codes. For better readability, sclang also provides symbol aliases for them. These are currently only supported in the doneAction argument to EnvGen, but for other UGens you can call code::UGen.processDoneAction:: on the symbol to convert it into the corresponding number.

The available done actions are as follows:
table::
## Number || Alias || Description
## 0 || code::\noop:: || do nothing when the UGen is finished
## 1 || code::\pauseSelf:: || pause the enclosing synth, but do not free it
## 2 || code::\freeSelf::, code::\free:: || free the enclosing synth
## 3 || code::\freeSelfAndPreceding:: ||  free both this synth and the preceding node
## 4 || code::\freeSelfAndFollowing:: ||  free both this synth and the following node
## 5 || code::\freeSelfAndNodesInPrecedingGroup:: ||  free this synth; if the preceding node is a group then do g_freeAll on it, else free it
## 6 || code::\freeSelfAndNodesInFollowingGroup:: ||  free this synth; if the following node is a group then do g_freeAll on it, else free it
## 7 || code::\freeSelfAndPrecedingNodesInGroup:: ||  free this synth and all preceding nodes in this group
## 8 || code::\freeSelfAndFollowingNodesInGroup:: ||  free this synth and all following nodes in this group
## 9 || code::\freeSelfAndPausePrecedingNode:: ||  free this synth and pause the preceding node
## 10 || code::\freeSelfAndPauseFollowingNode:: ||  free this synth and pause the following node
## 11 || code::\freeSelfAndDeepFreePrecedingGroup:: ||  free this synth and if the preceding node is a group then do g_deepFree on it, else free it
## 12 || code::\freeSelfAndDeepFreeFollowingGroup:: ||  free this synth and if the following node is a group then do g_deepFree on it, else free it
## 13 || code::\freeAllNodesInGroup:: ||  free this synth and all other nodes in this group (before and after)
## 14 || code::\freeGroup:: ||  free the enclosing group and all nodes within it (including this synth)
::

For information on code::freeAll:: and code::deepFree::, see link::Classes/Group:: and link::Reference/Server-Command-Reference::.

section:: Alternatives
Another way to free a synth when some UGen is done playing is to use link::Classes/FreeSelfWhenDone::, or link::Classes/FreeSelf:: in combination with link::Classes/Done::. For example, this can be used to delay the freeing to let reverb tails fade out, etc.

