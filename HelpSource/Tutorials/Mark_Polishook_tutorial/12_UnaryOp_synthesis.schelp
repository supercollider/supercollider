title:: 12_UnaryOp_synthesis
categories:: Tutorials>Mark_Polishook_tutorial
summary:: Mark Polishook tutorial
related:: Tutorials/Mark_Polishook_tutorial/00_Introductory_tutorial










section:: Unary messages




Some synthesis processes can be initiated with a unary message (a message with no arguments).

////////////////////////////////////////////////////////////////////////////////////////////////////

For example, compare

code::
{ SinOsc.ar(500, 0, 0.5) }.scope;
::

To

code::
{ SinOsc.ar(500, 0, 0.5).distort }.scope;
::

The .distort message modulates the SinOsc to create more partials.

////////////////////////////////////////////////////////////////////////////////////////////////////

Q: Where does the .distort message come from?

A: It's defined in the AbstractFunction class.
The UGen class is a subclass of the AbstractFunction class.
The idea is that all classes inherit methods defined in their superclasses; all UGens thus inherit from AbstractFunction).

Compare

code::
{ SinOsc.ar(500, 0, 0.5) }.scope;
::

To

code::
// .cubed is a unary operation
{ SinOsc.ar(500, 0, 0.5).cubed }.scope;
::

////////////////////////////////////////////////////////////////////////////////////////////////////

go to link::Tutorials/Mark_Polishook_tutorial/13_BinaryOp_synthesis::
