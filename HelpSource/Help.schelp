TITLE::Help
summary::Documentation home
categories::Help

NOTE:: link::Guides/News-3_13##News in SuperCollider version 3.13:: ::

table::
## strong::An introductory overview::

soft:: ::

SuperCollider* is a cross-platform environment for audio synthesis and algorithmic composition used by musicians, artists and researchers working with sound, with three main components:

definitionlist::
## soft:: ::• soft:: ::scsynth – a real-time audio server.||
To take full advantage of multi-core, an alternative sound engine, supernova, can be used.

## soft:: ::• soft:: ::sclang soft:: ::– a text-based programming language, interpreter and client.||
In addition to managing server-side objects, sclang offers interactive programming environments for on-the-fly coding and extensive libraries for creating diverse patterns in music and sound, as well as a wide range of scales and modes from various cultures. Creating processes that unfold over time is easy in sclang. It also provides all the essential features of a graphical user interface that can be extended to create animated visual effects. With support for MIDI, OSC and HID, sclang can be easily interfaced with local and networked hardware and software.

## soft:: ::• soft:: ::scide soft::  ::– a dedicated editor for SuperCollider with an integrated help system.||
The SuperCollider-IDE (Integrated Development Environment) allows you to start writing code right out of the box. Alternatively, if you are already familiar with a particular code editor, you can use your favourite front-end instead to benefit from the flavour features of your preferred editor: e.g. Visual Studio Code, Jupyter, SCNvim, Vim, NeoVim, Emacs, and so on.
::

The server and client communicate via OSC (open sound control) messages, allowing SuperCollider to run on a single machine or on multiple machines over a network.

soft:: ::

If you wish, you can extend SuperCollider's functionality by installing optional sc3-plugins distributed by the SC development team, and by installing individual extensions from the custom libraries called Quarks developed by individual users.

soft:: ::

* emphasis::SuperCollider was originally developed by James McCartney and is now distributed as Free Software under the GNU General Public License. It is maintained and developed by an active and enthusiastic community.::
::


SECTION::Search and browse
definitionlist::
## link::Search:: || Search all documents and methods
## link::Browse:: || Browse all documents by categories
::

SECTION::Getting started

These are useful starting points for getting help on SuperCollider:

definitionlist::
## link::Tutorials/Getting-Started/00-Getting-Started-With-SC##Getting Started tutorial series:: || Get started with SuperCollider
## link::Guides/Glossary:: || Glossary
## link::Guides/ClientVsServer:: || Explaining the client vs server architecture
## link::Guides/More-On-Getting-Help:: || How to find more help
## link::Browse.html#Tutorials#All tutorials:: || Index of all help files categorized under "Tutorials"
## link::Guides/UserFAQ:: || Common Errors and FAQ
::

SECTION::Documentation indexes

definitionlist::
## link::Overviews/Topics:: || Topics in Algorhythmic Composition and Synthesis with SuperCollider
## link::Overviews/Documents:: || Alphabetical index of all documents
## link::Overviews/Classes:: || Alphabetical index of all classes
## link::Overviews/ClassTree:: || All classes by inheritance tree
## link::Overviews/Methods:: || Alphabetical index of all methods
::

SECTION::Licensing

SuperCollider is free software published under the GPL: link::Other/Licensing::.

These help files are published under the Creative Commons CC-BY-SA-3 license: link::Other/HelpDocsLicensing::.
