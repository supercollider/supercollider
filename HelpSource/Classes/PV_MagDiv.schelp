title:: PV_MagDiv
categories:: UGens>FFT
summary:: Division of magnitudes










description::




Dividemagnitude magnitudes of two inputs and keeps the phases of the first input.










classmethods::




private:: categories


method:: new


argument:: bufferA

Fft buffer A.


argument:: bufferB

Fft buffer B.


argument:: zeroed

Number to use when bins are zeroed out, i.e. causing division by zero (defaults to teletype::0::.0001)










examples::




code::
s.boot;

(
SynthDef("help-magMul", { |out = 0|
	var inA, chainA, inB, chainB, chain;
	inA = WhiteNoise.ar(0.2);
	inB = LFSaw.ar(100, 0, 0.2);
	chainA = FFT(LocalBuf(2048), inA);
	chainB = FFT(LocalBuf(2048), inB);
	chain = PV_MagDiv(chainA, chainB);
	Out.ar(out, 0.5 * IFFT(chain).dup);
}).play;
)


c = Buffer.read(s, Platform.resourceDir +/+ "sounds/a11wlk01.wav");

(
SynthDef("help-magMul2", { |out = 0, soundBufnum = 0|
	var inA, chainA, inB, chainB, chain;
	inA = LFSaw.ar([100, 150], 0, 0.2);
	inB = PlayBuf.ar(1, soundBufnum, BufRateScale.kr(soundBufnum), loop: 1);
	chainA = FFT(LocalBuf(2048), inA);
	chainB = FFT(LocalBuf(2048), inB);
	chain = PV_MagDiv(chainA, chainB);
	Out.ar(out, 0.1 * IFFT(chain));
}).play(s, [\out, 0, \soundBufnum, c]);
)

c.free;
::
