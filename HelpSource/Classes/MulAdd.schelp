title:: MulAdd
summary:: multiplies and adds to a signal
categories:: UGens>Maths


description::


Multiplies the signal by mul and adds add. This UGen is very efficient (it performs various optimisation checks, for example). It is used very heavily throughout SuperCollider to perform multiply and add operations on the server; in fact it is  what "really" performs the code::mul:: and code::add:: arguments found in many UGens.

See also the discussion of code::mul:: and code::add:: arguments in the link::Classes/UGen:: help file.


classmethods::


private:: new1


method::new

argument::in
input signal.

argument::mul
multiplies with this value

argument::add
adds this value

discussion::
Same as:

code::
in.madd(mul, add)
::


instancemethods::


private:: init


examples::

code::
s.boot;

// The mul and add arguments of SinOsc themselves use MulAdd!
// These two examples will create precisely the same synth graph:
x = { SinOsc.ar(440, 0, 0.1, 0.05) }.play(s);
x.trace; // You should see a "MulAdd" in the trace
x.free;

x = { MulAdd(SinOsc.ar(440, 0), 0.1, 0.05) }.play(s);
x.trace;
x.free;

// In fact this will produce the same graph too - the separate multiply and add are optimised into one MulAdd
x = { SinOsc.ar(440, 0) * 0.1 + 0.05 }.play(s);
x.trace;
x.free;
::

(Note: the "trace" message is described in the helpfile for link::Classes/Node::.)
