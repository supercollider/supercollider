class:: LeastChange
summary:: Output least changed
related:: Classes/MostChange, Classes/LastValue
categories::  UGens>Maths


Description::

Given two inputs code::a:: and code::b::, let code::da[t] = abs(a[t] - a[t - 1]):: and code::db[t] = abs(b[t] - b[t - 1])::. Output code::a[t]:: if code::da[t]:: is smaller, and output code::b[t]:: if code::db[t]:: is smaller. If code::da[t] == db[t]::, use whichever input was used last (assume code::a:: for the first sample of output).


classmethods::

method::ar, kr

argument::a

Input signal A.


argument::b

Input signal B.

examples::

code::
(
d = { arg amp=1.0;
	var in1, in2;
	in1 = LFNoise0.ar(800, amp);
	in2 = SinOsc.ar(800);
	LeastChange.ar(in1, in2) * 0.1;
}.play;
)

d.set(\amp, 0.1);
d.set(\amp, 0);
d.set(\amp, 3);
d.free;
::

the control that changed least is used as output:

code::
(
d = { arg freq=440;
	var internalFreq;
	internalFreq = LFNoise0.ar(0.3, 300, 800);
	SinOsc.ar(
		LeastChange.kr(freq, internalFreq) // two sources of change: one external, one internal
	) * 0.1
}.play
);

d.set(\freq, 800);
d.set(\freq, 900);
d.free;
::

