class:: PbindefCut
summary:: incremental event pattern reference definition
categories:: Libraries>JITLib>Patterns, Live Coding,  Streams-Patterns-Events>Patterns
related:: Classes/Pdef, Classes/Pbind, Classes/Pbindef

description::

The only difference to link::Classes/Pbindef:: is that it only keeps  subpatterns that are passed to it with code::*new:: (see below).

PbindefCut and Pbindef use the same global collection, so they can be used as interfaces to the same pattern.


examples::

code::

// compare Pbindef and PbindefCut:
// for general examples, see Pbindef

(
SynthDef(\Pdefhelp, { arg out, freq, sustain=1, amp=1, pan;
	var env, u=1;
	env = EnvGen.kr(Env.perc(0.01, sustain), 1, doneAction: Done.freeSelf);
	5.do { var d; d = exprand(0.01, 1); u = SinOsc.ar(d * 300, u, rrand(0.1,1.2) * d, 1) };
	Out.ar(out, Pan2.ar(SinOsc.ar(u + 1 * freq, 0, amp * env), pan));
}).add;
)
s.boot;


Pbindef(\a, \instrument, \Pdefhelp).play;
Pbindef(\a, \degree, Pseq([0, 2, 5b, 1b], inf));
Pbindef(\a, \dur, 0.1);


PbindefCut(\a, \dur, 0.1); // now we have no degree pattern anymore.

// edit while running
(
PbindefCut(\a,
	\dur, 0.2,
	\degree, Pseq([1b, 5, 3, 1b, 6, 2, 5, 0, 3, 0, 2], inf),
	\mtranspose, 3,
)
)

// you can move between PbindefCut and Pbindef, they point to the same pattern

Pbindef(\a, \mtranspose, Pseq([0, 1], inf));

::
