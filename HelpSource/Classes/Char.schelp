class::Char
summary::ascii character
categories:: Core

description::
Chars may be written as literals using the $ sign. For example $a, $b, $c.
See link::Reference/Literals::

Chars may be created from link::Classes/Integer::s using the methods link::Classes/Integer#-asAscii:: and link::Classes/Integer#-asDigit::.

classmethods::

method::nl
Returns code::($\n)::
method::ff
Returns code::($\f)::
method::tab
Returns code::($\t)::
method::space
Returns code::($ )::
method::comma
Returns code::($\,)::
method::bullet
Returns a bullet character (â€¢) in SuperCollider.app on macOS, but a simple asterisk (*) on other frontends.
This method is not recommended, since it's actually not cross-platform.

instancemethods::
private:: archiveAsCompileString

subsection::conversion

method::ascii

returns:: the integer ascii value of a Char.

method::digit

returns:: an integer value from 0 to 9 for chars $0 to $9, and values 10 to 35 for chars $a to $z
or $A to $Z.

method::toUpper

returns:: the upper case version of a char. Nonalphabetic chars return themselves.

method::toLower

returns:: a lower case version of a char. Nonalphabetic chars return themselves.

subsection:: Testing

method::isAlpha

returns:: whether the char is an alphabetic character.

method::isAlphaNum

returns:: whether the char is an alphabetic or numeric character.

method::isPrint

returns:: whether the char is printable.

method::isPunct

returns:: whether the char is a punctuation character

method::isSpace

returns:: true if the char is white space.

method::isDecDigit

returns:: true if the char is a decimal digit $0 to $9.

method::isFileSafe

returns:: true if the char is safe for use as in a filename.
excludes the path separators / and :
discussion::
code::
 for(0,255,{ arg i;
	var a;
	[i,a = i.asAscii,a.isAlphaNum,a.isPrint,a.isPunct,a.isControl].postln;
});
::
