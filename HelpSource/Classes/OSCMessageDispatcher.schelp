title:: OSCMessageDispatcher
summary:: the default dispatcher class for OSCFunc and OSCdef
categories:: External Control>OSC>Dispatchers
related:: Classes/OSCFunc, Classes/OSCdef, Classes/AbstractWrappingDispatcher, Classes/AbstractDispatcher, Classes/AbstractMessageMatcher, Classes/OSCMessagePatternDispatcher, Classes/OSCFuncAddrMessageMatcher, Classes/OSCFuncRecvPortMessageMatcher, Classes/OSCFuncBothMessageMatcher, Guides/OSC_communication


description::


OSCMessageDispatcher dispatches incoming OSC messages to matching functions. Normally users should not have to create or message instances of this class directly.


classmethods::


instancemethods::


method::wrapFunc

called internally to wrap functions in message matcher objects, if needed.

argument::funcProxy
an instance of link::Classes/OSCFunc:: or link::Classes/OSCdef:: whose function(s) are to be wrapped.


method::getKeysForFuncProxy

gets the keys at which a responder func's functions are stored in this dispatcher's active dictionary. The keys will be an OSC path.

argument::funcProxy
the link::Classes/OSCFunc:: or link::Classes/OSCdef:: whose keys should be returned.

returns::

an link::Classes/Array:: containing the funcProxy's path as a link::Classes/Symbol::.


method::value

attempts to match an incoming OSC message with this dispatcher's responder funcs, and evaluate their functions for all matches found.

argument::msg
the OSC message as an link::Classes/Array:: in the form code::[OSCAddress, other args]::.

argument::time
a link::Classes/Float:: indicating the time the incoming message was sent.

argument::addr
a link::Classes/NetAddr:: indicating the source of the message.

argument::recvPort
an link::Classes/Integer:: indicating the port on which the message was received.


method::register

adds this dispatcher to thisProcess.recvOSCfunc.


method::unregister

removes this dispatcher from thisProcess.recvOSCfunc.


method::typeKey

returns code::'OSC unmatched'::.

returns::

a link::Classes/Symbol::.

