CLASS:: LanguageConfig
summary:: Accesses and modifies interpreter configuration
categories:: Language

description::
The LanguageConfig class provides access to the interpreter configuration.


section:: Configuration File Format
The configuration file is stored in YAML format, which contains one dictionary. The semantics of the dictionary is listed in
the following table:

definitionList::
## teletype::includePaths:: || List of class library paths.
## teletype::excludePaths:: || List of paths to exclude from the class library files (overrides teletype::includePaths::).
## teletype::postInlineWarnings:: || Boolean flag to post warnings about missing inline opportunities.
::

CLASSMETHODS::

method::store
Store the current configuration to file. Throws an error if the config file cannot be opened or if
writing fails.
argument::file
Path to the configuration file to store. If the value is code::nil:: it defaults to currently used configuration file, as specified in the IDE preferences, or by the code::sclang -l "/path/to/sclang_conf.yaml":: argument. By default this is code::Platform.userConfigDir +/+ "sclang_conf.yaml"::


subsection:: Library Path Handling

The language configuration mechanism provides a way to add or exclude specific paths for the class library.

note::Changes to the class library paths won't have any effect before the configuration file is stored and the class library is recompiled.::

method::includePaths
returns the class library include paths.

method::addIncludePath
adds new class library include path.

method::removeIncludePath
removes path from class library include paths.

method::excludePaths
returns the class library exclude paths.

method::addExcludePath
adds new class library exclude path.

method::removeExcludePath
removes path from class library exclude paths.

method::currentPath
returns the current config file path.

method::excludeDefaultPaths
gets/sets whether default class library paths are included.

note::
If sclang is started with -a the class library paths are excluded and this value is ignored. The default class library paths are Platform.classLibraryDir, and the system and user extensions directories.
::


subsection:: Compiler Warnings

method::postInlineWarnings
gets/sets the compiler flag, whether warnings should be posted if a FunctionDef cannot be inlined.

code::
LanguageConfig.postInlineWarnings_(true) // warn
if(0.5.coin) { var x; x = 10.rand; x + 1 } { 10 };
LanguageConfig.postInlineWarnings_(false) // ignore it.
if(0.5.coin) { var x; x = 10.rand; x + 1 } { 10 };
::
