class:: Schmidt
summary:: Schmidt trigger.
related:: Classes/InRange, Classes/InRect
categories::  UGens>Maths


Description::

If code::in > hi::, output 1. If code::in < lo::, output 0. Otherwise, repeat the
last sample of output, assumed to be 0 at initialization. In sclang-flavored
pseudocode:

code::
out[i] = if(in[i] < lo[i]) {
    0
} {
    if(in[i] > hi[i]) {
        1
    } {
        out[i-1]
    }
};
::

classmethods::

method::ar, kr

argument::in

Signal to be tested.


argument::lo

Low threshold.


argument::hi

High threshold.


Examples::

code::

s.boot;

{ Schmidt.kr(SinOsc.kr(1, 0, 0.2), -0.15, 0.15)}.scope; // see the trigger

{ Schmidt.kr(MouseX.kr(0, 1), 0.2, 0.8)}.scope; // try it with the cursor

// threshold octave jumps
(
{
	var in = LFNoise1.kr(3);
	var octave = Schmidt.kr(in, -0.15, 0.15) + 1;
	SinOsc.ar(in * 200 + 500 * octave, 0, 0.1)
}.scope;
)

::

