title:: StackNumberAllocator
categories:: Control
summary:: Consecutive number allocator
related:: Classes/ContiguousBlockAllocator, Classes/PowerOfTwoAllocator

description::

Number allocator within a specified range.

classmethods::

method:: new

Make a new instance, with lo and hi values.

argument:: lo

Initial value

argument:: hi

Maximum

instancemethods::

method:: init

Reset allocator to its initial state.

method:: alloc

Allocate next number. After hi value returns teletype::nil::.

method:: free

Set the next value of the allocator to the arbitrary teletype::inIndex:: (could be any object).
Then continue with the counter.

argument:: inIndex

examples::

code::
o = StackNumberAllocator(0, 100);
o.alloc // return the next value (evaluate multiple times)

o.init // reset counter
o.alloc // 0

o.free(2000) // returns the StackNumberAllocator itself - sets the next value to 2000
o.alloc // 2000
o.free("foo") // you can set the next value to any Object, not just integers
o.alloc // "foo"
o.alloc // allocator resumes counting where it left off before we called .free
::
