title:: EventStreamPlayer
summary:: two streams combined by a binary operator
categories:: Streams-Patterns-Events
related:: Classes/Event, Classes/Pbind


description::


An EventStreamPlayer is used by link::Classes/Event:: based Patterns.

The EventStreamPlayer holds a stream which returns a series of Events, and a protoEvent. At each call to next, it copies the protoEvent, passes that to the stream, and calls strong::play:: on the link::Classes/Event:: returned.

For more on EventStreamPlayer see link::Tutorials/Streams-Patterns-Events4::

EventStreamPlayer uses the same control methods and status notifications as link::Classes/Task::.


classmethods::


method::new

note::
You do not explicitly create an EventStreamPlayers, they are created for you when you call link::Classes/Pattern#-play::.
::


instancemethods::


private:: prStop, prNext


method::play

argument::argClock
(optional) Override the clock assigned in Task.new.

argument::doReset
if code::true::, the task will start over from the beginning. The default is code::false:: (task will resume where it was when it was last stopped).

argument::quant
see the link::Classes/Quant:: helpfile.


method::start

restarts the task from the beginning.


method::resume

resumes the task where it left off.


method::pause

stops playing now.


method::stop

stops playing now. (Pause and stop have the same implementation.)


method::reset

sets the stream to restart from the beginning the next time it's played.


method::reschedule

switches the Task to a different clock, or a different time, without stopping. See link::Classes/Routine#-reschedule:: for complete documentation.

note::
Rescheduling an EventStreamPlayer from within the pattern itself is currently not supported.
::
