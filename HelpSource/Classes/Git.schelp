title:: Git
categories:: Frontends
summary:: Git interface
related:: Classes/Quarks, Classes/Quark

description::

An interface to the git toolchain.
For more information on git, see link::http://git.io::.

classmethods::

method:: new

Creates a new instance of code::Git::, pointing to an existing local git repository.

argument:: localPath

Path to the git repository.

method:: isGit

returns code::true::, if a local directory is a git repository.

argument:: localPath

method:: checkForGit

returns code::true::, if the git toolchain is found on the system.

instancemethods::

subsection:: Info

method:: branch

returns::
Current branch name.

method:: remote, url

returns::
Url of the first remote that it finds.

method:: remoteAsHttpUrl

Detects if the remote URI starts with code::"git@":: or code::"git:":: and remodels it to a valid code::"https":: URI. Otherwise, it returns the unaltered remote.

code::
// git-style remote URI's are transformed to https
Git().url_("git@github.com:foo/bar.git").remoteAsHttpUrl;
Git().url_("https://github.com/foo/bar").remoteAsHttpUrl;
Git().url_("git@foo.net:foo/bar.git").remoteAsHttpUrl;

// http and https are left untouched
Git().url_("https://foo.org/bar").remoteAsHttpUrl;
Git().url_("http://foo.org/bar").remoteAsHttpUrl;

// unknown URI styles are left untouched
Git().url_("fooBar").remoteAsHttpUrl;
::

returns::
Remote URI formatted for code::http::respectively code::https:: requests.

method:: remoteLatest

returns::
Hash of latest commit on the remote

method:: localPath

returns::
Path to local repository

method:: tag

returns::
Currently checked out tag

method:: tags

returns::
Avaliable tags

method:: sha

returns::
Hash of the currently checked out version

method:: shaForTag

argument:: tag

One of the tags returned by link::#-tags::

returns::
Hash of the given tag

method:: isDirty

returns::
code::true:: if there are local changes

subsection:: Perform actions on remote

method:: fetch

Perform a fetch from remote

method:: checkout

Perform a checkout from remote with argument code::refspec::

argument:: refspec

method:: pull

Perform a pull from remote

method:: clone

Perform a clone from url into link::#-localPath::

argument:: url

The url of the remotes

private:: git, refspec

examples::

code::
// create a Git that points to a Quark directory
g = Git(Quarks.all.choose.localPath);

// alternatively, provide a pathname to a local git repository:
g = Git("/path/to/local/repo");

// get all available tags
g.tags;

// return local path
g.localPath;

// return url
g.url;
::
