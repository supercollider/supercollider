title:: Pgate
categories:: Streams-Patterns-Events>Patterns>Repetition
summary:: A gated stream that only advances when a particular event key is true
related:: Classes/Pn










description::




Pgate advances its subpattern whenever strong::key:: is true. Pgate must be used within an Event pattern.
You can either set the key manually, or use link::Classes/Pn::.










classmethods::




method:: new


argument:: pattern

The source pattern to be filtered.


argument:: repeats

Repeat the enclosed pattern strong::repeats:: times.


argument:: key

Pgate will only return the next value in the source pattern if the event that it belongs to has strong::key:: set to teletype::true::.
Otherwise it will keep returning the same value.
This allows for a gated effect on streams.










examples::




code::
// Use \step to change the octave randomly
(
Pbind(
	\degree, Pseq((0..7), inf),
	\step, Pseq([false, false, false, true, false, true, false], inf),
	\octave, Pgate(Pwhite(3, 7), inf, \step),
	\dur, 0.2
).play
)
::

code::
// Pn advances Pgate each time its subpattern is repeated
(
Pbind(
	\degree, Pn(Pseq((0..7)), inf, \step),
	\mtranspose, Pgate(Pwhite(0, 5), inf, \step),
	\dur, 0.2
).play
)


// Two different Pgates advanced at two different rates
(
Pbind(

	\scale,	Scale.minor,
	\foo, Pn(Pseq((0..2)), inf, \step1),
	\degree, Pn(Pseq((0..7).mirror), inf, \step),
	\ctranspose, Pgate(Pwhite(0, 5), inf, \step) + Pgate(Pseq([0, 7, 0, -7], inf), inf, \step1),
	\dur, 0.2
).play
)
::
